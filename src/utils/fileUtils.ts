// –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è —Ñ–∞–π–ª–æ–≤—ã—Ö –∑–∞–ø–∏—Å–µ–π
export interface FileEntry {
  name: string
  type: string
  size?: string
  permissions?: string
  date?: string
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ä–∞–∑–±–æ—Ä–∞ –≤—ã–≤–æ–¥–∞ ls -la
export function parseDirectoryListing(listing: string[]): FileEntry[] {
  return listing
    .filter((l) => !l.startsWith('total'))
    .map((line) => {
      const parts = line.trim().split(/\s+/)
      if (parts.length < 8) return { name: line, type: 'unknown' }

      const permissions = parts[0]
      const type = permissions.startsWith('d')
        ? 'directory'
        : permissions.startsWith('l')
          ? 'symlink'
          : 'file'

      const size = parts[4]
      const date = `${parts[5]} ${parts[6]} ${parts[7]}`
      const name = parts.slice(8).join(' ')
      return { name, type, size, permissions, date }
    })
    .filter((e) => e.name !== '.' && e.name !== '..')
}

// –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–∫–æ–Ω–∫–∏ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞ —Ñ–∞–π–ª–∞ –∏ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è
export function getFileIcon(type: string, name?: string): string {
  // –ï—Å–ª–∏ —ç—Ç–æ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –∏–ª–∏ —Å–∏–º–ª–∏–Ω–∫, –∏–∫–æ–Ω–∫–∞ –Ω–µ –∑–∞–≤–∏—Å–∏—Ç –æ—Ç —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è
  switch (type) {
    case 'directory':
      return 'üìÅ'
    case 'symlink':
      return 'üîó'
  }

  // –î–ª—è —Ñ–∞–π–ª–æ–≤ –æ–ø—Ä–µ–¥–µ–ª—è–µ–º –∏–∫–æ–Ω–∫—É –ø–æ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—é
  if (name) {
    // –ü–æ–ª—É—á–∞–µ–º —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ —Ñ–∞–π–ª–∞ (–ø–æ—Å–ª–µ–¥–Ω—è—è —á–∞—Å—Ç—å –ø–æ—Å–ª–µ —Ç–æ—á–∫–∏)
    const extension = name.split('.').pop()?.toLowerCase() || ''

    switch (extension) {
      // –¢–µ–∫—Å—Ç–æ–≤—ã–µ —Ñ–∞–π–ª—ã
      case 'txt':
      case 'md':
      case 'log':
        return 'üìÑ'

      // –ò—Å—Ö–æ–¥–Ω—ã–π –∫–æ–¥
      case 'js':
      case 'ts':
      case 'jsx':
      case 'tsx':
      case 'vue':
      case 'py':
      case 'java':
      case 'c':
      case 'cpp':
      case 'h':
      case 'hpp':
      case 'cs':
      case 'php':
      case 'rb':
      case 'go':
      case 'rs':
      case 'swift':
      case 'kt':
        return 'üìù'

      // Web-—Ñ–∞–π–ª—ã
      case 'html':
      case 'htm':
      case 'css':
      case 'scss':
      case 'sass':
      case 'less':
        return 'üåê'

      // –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
      case 'json':
      case 'xml':
      case 'yaml':
      case 'yml':
      case 'toml':
      case 'ini':
      case 'conf':
      case 'config':
        return '‚öôÔ∏è'

      // –ò—Å–ø–æ–ª–Ω—è–µ–º—ã–µ —Ñ–∞–π–ª—ã
      case 'exe':
      case 'dll':
      case 'so':
      case 'dylib':
      case 'sh':
      case 'bat':
      case 'cmd':
      case 'ps1':
        return '‚ö°'

      // –ê—Ä—Ö–∏–≤—ã
      case 'zip':
      case 'rar':
      case 'tar':
      case 'gz':
      case '7z':
      case 'bz2':
        return 'üì¶'

      // –ú–µ–¥–∏–∞-—Ñ–∞–π–ª—ã
      case 'jpg':
      case 'jpeg':
      case 'png':
      case 'gif':
      case 'bmp':
      case 'svg':
      case 'ico':
        return 'üñºÔ∏è'

      case 'mp3':
      case 'wav':
      case 'ogg':
      case 'flac':
      case 'aac':
        return 'üéµ'

      case 'mp4':
      case 'avi':
      case 'mkv':
      case 'mov':
      case 'wmv':
      case 'flv':
        return 'üé¨'

      // –î–æ–∫—É–º–µ–Ω—Ç—ã
      case 'pdf':
        return 'üìë'
      case 'doc':
      case 'docx':
        return 'üìò'
      case 'xls':
      case 'xlsx':
        return 'üìä'
      case 'ppt':
      case 'pptx':
        return 'üìΩÔ∏è'

      // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –¥–ª—è –≤—Å–µ—Ö –æ—Å—Ç–∞–ª—å–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
      default:
        return 'üìÑ'
    }
  }

  // –ï—Å–ª–∏ –∏–º—è —Ñ–∞–π–ª–∞ –Ω–µ –ø–µ—Ä–µ–¥–∞–Ω–æ –∏–ª–∏ —ç—Ç–æ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ç–∏–ø
  return 'üìÑ'
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Ñ–∞–π–ª —Ç–µ–∫—Å—Ç–æ–≤—ã–º (–¥–æ—Å—Ç—É–ø–Ω—ã–º –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è)
export function isTextFile(name: string): boolean {
  // –ü–æ–ª—É—á–∞–µ–º —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ —Ñ–∞–π–ª–∞
  const extension = name.split('.').pop()?.toLowerCase() || ''

  // –°–ø–∏—Å–æ–∫ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–π —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Ñ–∞–π–ª–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–∂–Ω–æ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å
  const textExtensions = [
    // –û–±—ã—á–Ω—ã–µ —Ç–µ–∫—Å—Ç–æ–≤—ã–µ —Ñ–∞–π–ª—ã
    'txt',
    'md',
    'log',
    'csv',
    'tsv',

    // –ò—Å—Ö–æ–¥–Ω—ã–π –∫–æ–¥
    'js',
    'ts',
    'jsx',
    'tsx',
    'vue',
    'py',
    'java',
    'c',
    'cpp',
    'h',
    'hpp',
    'cs',
    'php',
    'rb',
    'go',
    'rs',
    'swift',
    'kt',
    'scala',
    'hs',
    'lua',

    // Web-—Ñ–∞–π–ª—ã
    'html',
    'htm',
    'css',
    'scss',
    'sass',
    'less',

    // –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
    'json',
    'xml',
    'yaml',
    'yml',
    'toml',
    'ini',
    'conf',
    'config',

    // –°–∫—Ä–∏–ø—Ç—ã
    'sh',
    'bat',
    'cmd',
    'ps1',

    // –°–∏—Å—Ç–µ–º–Ω—ã–µ —Ñ–∞–π–ª—ã Linux
    'bashrc',
    'bash_profile',
    'profile',
    'vimrc',
    'gitconfig',
  ]

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ –≤ —Å–ø–∏—Å–∫–µ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Ñ–∞–π–ª–æ–≤
  // –ï—Å–ª–∏ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç, —Å—á–∏—Ç–∞–µ–º —Ñ–∞–π–ª —Ç–µ–∫—Å—Ç–æ–≤—ã–º
  return extension === '' || textExtensions.includes(extension)
}
